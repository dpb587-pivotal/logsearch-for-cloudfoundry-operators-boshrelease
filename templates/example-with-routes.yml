releases:
- (( merge ))
- name: logsearch-for-cloudfoundry-operators
  version: latest

jobs:
- name: parser
  templates:
  - (( merge ))
  - {name: parsing-rules-for-cf-ops, release: logsearch-for-cloudfoundry-operators}
  properties:
    logstash_parser:
      filters:
      - logsearch-for-cf: /var/vcap/packages/parsing-rules-for-cf-ops/logstash-filters-default.conf

- name: ls-router
  instances: 1
  templates:
  - (( merge ))
  - {name: route_registrar, release: logsearch-for-cloudfoundry-operators}
  - {name: syslog_forwarder, release: logsearch}
  properties:
    route_registrar:
      routes:
      - name: logsearch
        port: 80
        uris:
        - (( concat "logsearch." properties.cf.system_domain ))
        registration_interval: 20s
      - name: logsearch_monitor
        port: 8080
        registration_interval: 20s
        uris:
        - (( concat "logsearch_monitor." properties.cf.system_domain ))
    syslog_forwarder:
      config:
       - {service: route_registrar, file: /var/vcap/sys/log/route_registrar/route_registrar.stdout.log}
       - {service: route_registrar, file: /var/vcap/sys/log/route_registrar/route_registrar.stderr.log}

- name: firehose-to-syslog
  instances: 0
  resource_pool: haproxy #because it's small by default
  networks:
  - name: default
  templates:
  - { release: logsearch-for-cloudfoundry-operators, name: ingestor_cloudfoundry-firehose }
  properties:
    cloudfoundry:
      api_endpoint: cf_api_url
      system_domain: cf_system_domain
      skip_ssl_validation: false
      firehose_port: 4443
      firehose_user: doppler
      firehose_password: firehose-password
      firehose_events: [HttpStart,HttpStop,HttpStartStop,ValueMetric,CounterEvent,Error,ContainerMetric,HttpStart]
    syslog:
      host: (( grab jobs.ls-router.networks.default.static_ips.[0] ))
      port: 514

properties:
  cf:
    system_domain: cf_system_domain
  nats:
    machines: [nats-ip]
    port: 4222
    user: nats
    password: nats-password
